{{- if .Values.manifests.daemonset_kernel }}
{{- $_ := set .Values "images" .Values.global.images }}
{{- $context := . }}
# host_os is a mandatory field
{{- $_ := required ".Values.global.node.host_os must be specified, valid values are ubuntu, centos" .Values.global.node.host_os }}
{{- $host_os := .Values.global.node.host_os }}
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: contrail-vrouter-agent-kernel
spec:
  template:
    metadata:
      labels:
{{ tuple $context "opencontrail" "contrail-vrouter-agent-kernel" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 8 }}
      annotations:
        configmap-hash: {{ tuple "configmap-env.yaml" $context | include "helm-toolkit.utils.hash" }}
    spec:
      #Disable affinity for single node setup
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: {{ .Values.labels.vrouter_agent_kernel.node_selector_key }}
                operator: In
                values:
                - {{ .Values.labels.vrouter_agent_kernel.node_selector_value }}
      #Enable tolerations for single node setup
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      initContainers:
{{ tuple $context .Values.dependencies.vrouter_agent_kernel nil | include "helm-toolkit.snippets.kubernetes_entrypoint_init_container" | indent 8 }}
        - name: contrail-node-init
          image: {{ .Values.global.images.tags.node_init | quote }}
          imagePullPolicy: {{ default "" .Values.global.images.imagePullPolicy | quote }}
          securityContext:
            privileged: true
          env:
          - name: CONTRAIL_STATUS_IMAGE
            value: {{ .Values.global.images.tags.contrail_status | quote }}
          envFrom:
          - configMapRef:
              name: contrail-vrouter-kernel
          volumeMounts:
          - mountPath: /host/usr/bin
            name: host-usr-bin
{{- if eq $host_os "ubuntu"}}
        - name: contrail-vrouter-init-kernel
          image: {{ .Values.global.images.tags.build_driver_init | quote }}
          imagePullPolicy: {{ default "" .Values.global.images.imagePullPolicy | quote }}
          securityContext:
            privileged: true
          envFrom:
          - configMapRef:
              name: contrail-vrouter-kernel
          - configMapRef:
              name: contrail-vrouter-keystone
          volumeMounts:
          - mountPath: /usr/src
            name: usr-src
          - mountPath: /lib/modules
            name: lib-modules
          - mountPath: /host/bin
            name: host-bin
{{- else if $host_os "centos" }}
        - name: contrail-vrouter-init-kernel
          image: {{ .Values.global.images.tags.vrouter_init_kernel | quote }}
          imagePullPolicy: {{ default "" .Values.global.images.imagePullPolicy | quote }}
          securityContext:
            privileged: true
          envFrom:
          - configMapRef:
              name: configmap-vrouter
          - configMapRef:
              name: contrail-vrouter-keystone
          volumeMounts:
          - mountPath: /etc/sysconfig/network-scripts
            name: network-scripts
          - mountPath: /host/bin
            name: host-bin
{{- end }}
      containers:
      - name: contrail-vrouter-agent
        image: {{ .Values.global.images.tags.vrouter_agent | quote }}
        imagePullPolicy: {{ default "" .Values.global.images.imagePullPolicy | quote }}
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: contrail-vrouter-kernel
        - configMapRef:
            name: contrail-vrouter-keystone
        volumeMounts:
{{- if eq $host_os "centos"}}
        - mountPath: /etc/sysconfig/network-scripts
          name: network-scripts
{{- end }}
        - mountPath: /var/lib/contrail/
          name: var-lib-contrail
        - mountPath: /var/log/contrail/
          name: contrail-log
        - mountPath: /var/crashes
          name: var-crashes-vrouter
        - mountPath: /host/bin
          name: host-bin
        - mountPath: /var/run/libvirt
          name: var-run-libvirt
      - name: contrail-vrouter-nodemgr
        image: {{ .Values.global.images.tags.nodemgr | quote }}
        imagePullPolicy: {{ default "" .Values.global.images.imagePullPolicy | quote }}
        envFrom:
        - configMapRef:
            name: contrail-vrouter-kernel
        - configMapRef:
            name: contrail-vrouter-keystone
        env:
        - name: NODE_TYPE
          value: vrouter
        - name: DOCKER_HOST
          value: "unix://mnt/docker.sock"
        volumeMounts:
        - mountPath: /mnt/docker.sock
          name: docker-unix-socket
        - mountPath: /var/log/contrail/
          name: contrail-log
        - mountPath: /var/crashes
          name: var-crashes-vrouter
      volumes:
{{- if eq $host_os "ubuntu"}}
      - name: usr-src
        hostPath:
          path: /usr/src
      - name: lib-modules
        hostPath:
          path: /lib/modules
{{- else if $host_os "centos" }}
      - name: network-scripts
        hostPath:
          path: /etc/sysconfig/network-scripts
{{- end }}
      - name: docker-unix-socket
        hostPath:
          path: /var/run/docker.sock
          type: Socket
      - name: var-run
        hostPath:
          path: /var/run/
      - name: var-lib-contrail
        hostPath:
          path: /var/lib/contrail/
      - name: contrail-log
        hostPath:
          path: /var/log/contrail
      - name: var-crashes-vrouter
        hostPath:
          path: /var/crashes
      - name: host-bin
        hostPath:
          path: /bin
      - name: var-run-libvirt
        hostPath:
          path: /var/run/libvirt
      - name: host-usr-bin
        hostPath:
          path: /usr/bin
{{- end }}
