global:
  images:
    tags:
      kafka: "docker.io/opencontrailnightly/contrail-external-kafka:latest"
      cassandra: "docker.io/opencontrailnightly/contrail-external-cassandra:latest"
      redis: "docker.io/opencontrailnightly/contrail-external-redis:latest"
      zookeeper: "docker.io/opencontrailnightly/contrail-external-zookeeper:latest"
      rabbitmq: "docker.io/opencontrailnightly/contrail-external-rabbitmq:latest"
      nodemgr: "docker.io/opencontrailnightly/contrail-nodemgr:latest"
      contrail_status: "docker.io/opencontrailnightly/contrail-status:latest"
      node_init: "docker.io/opencontrailnightly/contrail-node-init:latest"
      dep_check: quay.io/stackanetes/kubernetes-entrypoint:v0.2.1
    imagePullPolicy: "IfNotPresent"
    # Specify imageCredentials
    imageCredentials:
      # registry: quay.io
      # username: username
      # password: password

  contrail_env:
    CONTROLLER_NODES: 10.87.65.248
    LOG_LEVEL: SYS_NOTICE
    CLOUD_ORCHESTRATOR: openstack
    AAA_MODE: cloud-admin
    RABBITMQ_VHOST: "/"
    RABBITMQ_USER: "guest"
    RABBITMQ_PASSWORD: "guest"
    RABBITMQ_NODE_PORT: 5673

labels:
  configdb:
    node_selector_key: opencontrail.org/controller
    node_selector_value: "enabled"
  analyticsdb:
    node_selector_key: opencontrail.org/controller
    node_selector_value: "enabled"
  analytics_zookeeper:
    node_selector_key: opencontrail.org/controller
    node_selector_value: "enabled"
  config_zookeeper:
    node_selector_key: opencontrail.org/controller
    node_selector_value: "enabled"
  redis:
    node_selector_key: opencontrail.org/controller
    node_selector_value: "enabled"
  kafka:
    node_selector_key: opencontrail.org/controller
    node_selector_value: "enabled"
  analyticsdb_nodemgr:
    node_selector_key: opencontrail.org/controller
    node_selector_value: "enabled"
  configdb_nodemgr:
    node_selector_key: opencontrail.org/controller
    node_selector_value: "enabled"
  rabbitmq:
    node_selector_key: opencontrail.org/controller
    node_selector_value: "enabled"

dependencies:
  kafka:
    daemonset:
    - contrail-analytics-zookeeper
  analyticsdb:
    daemonset:
    - contrail-analytics-zookeeper
    - contrail-kafka
  configdb:
    daemonset:
    - contrail-config-zookeeper
  analyticsdb_nodemgr:
    daemonset:
    - contrail-analyticsdb
  configdb_nodemgr:
    daemonset:
    - contrail-configdb
  rabbitmq:
    daemonset:
    - contrail-config-zookeeper
    - contrail-configdb

# Names of secrets used by bootstrap and environmental checks
secrets:
  keystone:
    admin: contrail-thirdparty-keystone-admin

endpoints:
  cluster_domain_suffix: cluster.local
  keystone:
    auth:
      username: admin
      password: password
      project_name: admin
      user_domain_name: default
      project_domain_name: default
      region_name: RegionOne
    hosts:
      default: keystone-api
    path:
      default: /v3
    port:
      admin:
        default: 35357
      api:
        default: 80
    scheme:
      default: http
    host_fqdn_override:
       default: null
    namespace: openstack
pod:
  lifecycle:
    upgrades:
      daemonsets:
        pod_replacement_strategy: RollingUpdate
        configdb:
          enabled: true
          min_ready_seconds: 0
          max_unavailable: 1
        analyticsdb:
          enabled: true
          min_ready_seconds: 0
          max_unavailable: 1
        analytics_zookeeper:
          enabled: true
          min_ready_seconds: 0
          max_unavailable: 1
        config_zookeeper:
          enabled: true
          min_ready_seconds: 0
          max_unavailable: 1
        redis:
          enabled: true
          min_ready_seconds: 0
          max_unavailable: 1
        kafka:
          enabled: true
          min_ready_seconds: 0
          max_unavailable: 1
        rabbitmq:
          enabled: true
          min_ready_seconds: 0
          max_unavailable: 1
        analyticsdb_nodemgr:
          enabled: true
          min_ready_seconds: 0
          max_unavailable: 1
        configdb_nodemgr:
          enabled: true
          min_ready_seconds: 0
          max_unavailable: 1

# VolumeMounts related inputs are defined here
volumeMounts:
  host_usr_bin:
    hostPath: '/usr/bin'

service:
  rabbitmq_public_port: ""

manifests:
  configmap_analytics_zookeeper: true
  configmap_config_zookeeper: true
  configmap_thirdparty_env: true
  configmap_thirdparty_keystone: true
  configmap_configdb: true
  configmap_analyticsdb: true
  daemonset_configdb: true
  daemonset_analyticsdb: true
  daemonset_redis: true
  daemonset_analytics_zookeeper: true
  daemonset_config_zookeeper: true
  daemonset_kafka: true
  daemonset_analyticsdb_nodemgr: true
  daemonset_configdb_nodemgr: true
  secret_thirdparty_keystone_admin: true
  daemonset_rabbitmq: true
  service_rabbitmq: true
