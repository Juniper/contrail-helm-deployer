{{- if .Values.manifests.daemonset_kafka }}
{{- $_ := set .Values "images" .Values.global.images }}
{{- $context := . }}
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: contrail-kafka
spec:
  template:
    metadata:
      labels:
{{ tuple $context "opencontrail" "kafka" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 8 }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: {{ .Values.labels.kafka.node_selector_key }}
                operator: In
                values:
                - {{ .Values.labels.kafka.node_selector_value }}
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      initContainers:
{{ tuple $context .Values.dependencies.kafka nil | include "helm-toolkit.snippets.kubernetes_entrypoint_init_container" | indent 8 }}
      containers:
      - name: kafka
        image: {{ .Values.global.images.tags.kafka | quote }}
        imagePullPolicy: {{ default "" .Values.global.images.imagePullPolicy | quote }}
        env:
        - name: NODE_TYPE
          value: database
        envFrom:
        - configMapRef:
            name: contrail-thirdparty-env
        readinessProbe:
          tcpSocket:
            port: {{ .Values.global.contrail_env.KAFKA_PORT | default 9092 }}
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        livenessProbe:
          tcpSocket:
            port: {{ .Values.global.contrail_env.KAFKA_PORT | default 9092 }}
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
{{- end }}
